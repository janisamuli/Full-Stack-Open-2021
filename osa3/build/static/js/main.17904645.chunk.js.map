{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","Components/Persons.js","Services/personsService.js","Components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","type","Persons","persons","filter","person","name","toLowerCase","includes","newFiltered","map","number","onClick","deletePerson","id","baseUrl","axios","get","newObject","post","put","delete","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","className","App","useState","setPersons","setNewName","setNewNumber","setNewFiltered","notification","setNotification","useEffect","personsService","then","response","data","event","target","preventDefault","personObject","nanoid","personAlreadyAdded","personUpdate","length","window","confirm","setTimeout","catch","error","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17904645.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = (props) => {\n    return (\n<div>\n  Filter names: <input value ={props.value} onChange={props.onChange} >\n\n\n  </input>\n</div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\n\nconst PersonForm = (props) => {\nreturn (\n\n<form onSubmit={props.addPerson}>\n        <div>\n          name: <input \n          value={props.newName} \n          onChange = {props.handlePersonChange} />\n        </div>\n\n        <div>number: <input\n        value={props.newNumber}\n        onChange = {props.handleNumberChange}\n         />\n         </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\n}\n      export default PersonForm","import React from 'react'\n\n\nconst Persons = (props) => {\n\n  \n    return (\n<ul>\n{props.persons.filter(person => person.name.toLowerCase().includes(props.newFiltered.toLowerCase())).map(person =>\n  <li key={props.persons.id}>\n    {person.name}   {person.number}      <button onClick={() => props.deletePerson(person.name,person.id)}>delete</button>\n  </li>\n  )}\n  </ul>\n    ) \n      }\n\n      export default Persons ","import axios from 'axios'\n\nconst baseUrl= '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n  }\n  \n  const create = newObject => {\n    return axios.post(baseUrl, newObject)\n  }\n  \n  const update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n  }\n\n  const wipeout = (id) => {\n\n    return axios.delete(`${baseUrl}/${id}`) \n\n  } \n  \n  export default { \n    getAll, create, update , wipeout\n  }","import React from 'react'\n\n\n\nconst Notification = ({ message }) => {\n    const notificationStyle ={\n\n            color: 'green',\n            background: 'lightgrey',\n            fontSize: 20,\n            borderStyle: 'solid',\n            borderRadius: 5,\n            padding: 10,\n            marginBottom: 10\n          \n          \n    }\nif(message === null ) {\n    return null\n}\n\nreturn (\n\n    <div style={notificationStyle} className= \"notification\">\n    {message} \n    </div>\n)\n\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport { nanoid } from 'nanoid';\nimport Filter from './Components/Filter.js'\nimport PersonForm from './Components/PersonForm.js'\nimport Persons from './Components/Persons.js'\nimport personsService from './Services/personsService.js'\nimport Notification from './Components/Notification.js'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newFiltered, setNewFiltered] = useState('')\n  const [notification, setNotification] = useState(null)\n  useEffect(() => {\n    personsService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n \n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: nanoid()\n    }\n\n    const personAlreadyAdded  = persons.filter(\n  person => person.name === newName  );\n\n  const personUpdate = personAlreadyAdded[0]\n\n    if(personAlreadyAdded.length > 0) \n    {\n      if(window.confirm(`${newName} has been already added to the phonebook. Replace the old number with a new one? `))\n     {\n      personsService.update(personUpdate.id, personObject )\n      .then(response => {\n        setPersons(persons.map(person => person.id !== personUpdate.id ? person : response.data))\n        setNotification(`Changed the phone number of ${newName}.`)\n    setTimeout(() => {\n      setNotification(null) \n    }, 5000)\n      })\n      .catch( error => {\n        setNotification(`${newName} has been already deleted from the server.`)\n        setTimeout(() => {\n          setNotification(null) \n        }, 5000)\n\n        setPersons(persons.filter(person => person.name !== newName))\n      })\n\n    }\n\n      setNewName('')\n      setNewNumber('')\n      return \n      }\n\n\n    personsService\n    .create(personObject)\n  .then(response => {\n    setPersons(persons.concat(response.data))\n\n    setNotification(`Added ${newName}`)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n    setNewName('')\n    setNewNumber('')\n  }).catch(error => {\n    setNotification(`${error.response.data.error}`)\n  })\n    \n  }\n\n\n  const handlePersonChange = (event)  =>{\nsetNewName(event.target.value)\n  } \n\n  const handleNumberChange = (event)  =>{\n    setNewNumber(event.target.value)\n      } \n\n      const handleFilteredChange = (event)  =>{\n        setNewFiltered(event.target.value)\n          }   \n          \n      const deletePerson = (name,id) => {\n            if(window.confirm(`Delete ${name} ?`)){\n              personsService.wipeout(id)\n                setPersons(persons.filter((person) => person.id !== id))\n              }\n\n              setNotification(`Deleted ${name} from phonebook`)\n              setTimeout(() => {\n                setNotification(null) \n              }, 5000)\n            }\n           \n\n\n\n  \n\n  return (\n    \n    <div>\n    <h2> Phonebook</h2>\n\n    <Notification message={notification} />\n\n<Filter value={newFiltered} onChange={handleFilteredChange} />\n\n      <h2>Add a new</h2>\n\n    <PersonForm \n\n    addPerson = {addPerson} newName={newName} handlePersonChange = {handlePersonChange}\n    newNumber = {newNumber} handleNumberChange = {handleNumberChange} \n    />\n\n      \n      <h2>Numbers</h2>\n     <Persons persons = {persons} newFiltered= {newFiltered} deletePerson = {deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}